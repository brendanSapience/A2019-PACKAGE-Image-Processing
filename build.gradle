//buildscript {
//	repositories {
//		mavenCentral()
//		jcenter()
//		maven {
//			url "https://plugins.gradle.org/m2/"
//		}
//		flatDir {
//			dirs 'libs'
//		}
//	 }
//}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
		dependencies {
			classpath name: 'shadow'
			classpath name:'command-plugin'
			classpath "net.ltgt.gradle:gradle-apt-plugin:0.20"
		}
	}
}

plugins {
	id 'java'
}

configure(allprojects){
	
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: "com.automationanywhere.command-codegen"
	
	ext {
		groupName = 'com.automationanywhere'
		testNgVersion = '6.14.3'
		loggerVersion = '2.10.0'
		version '1.0.0'
	}
	group "$groupName"

	sourceCompatibility = 1.8

	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
	
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
	}
	
	configurations {
		apt
	}
	
	compileJava {
		options.annotationProcessorPath = configurations.apt
		
		dependsOn processResources

	}
	
	packageJson{
		artifactName = project.name
		group = "$groupName"
	}
	
	jar.dependsOn commandCodeGen
	
	shadowJar {
		baseName = project.name
		classifier = null
		mergeServiceFiles('META-INF/spring.*')
		mergeServiceFiles('META-INF/services/java.sql.Driver')
		zip64 = true
		exclude 'META-INF/MANIFEST.MF'
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
		rename '^OABWrapper.*\\.zip$', 'OABWrapper.zip'
	}

	
	dependencies {
		compileOnly name: 'command-annotations'
		compileOnly name: 'bot-runtime'
		compileOnly name: 'bot-api'
		implementation name: 'i18n-api'
		apt name: 'command-processor'
		compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$loggerVersion"
		testImplementation "org.testng:testng:$testNgVersion"
		testImplementation name: 'bot-runtime'
		testImplementation name: 'bot-api'
		testCompile group: 'junit', name: 'junit', version: '4.12'
		compile files('C:\\CustomPackages\\java_libs\\libs\\Catalano.Core.jar')
		compile files('C:\\CustomPackages\\java_libs\\libs\\Catalano.Image.jar')
	}
	
}